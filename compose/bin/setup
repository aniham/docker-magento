#!/bin/bash

set -o errexit

source env/install.env

ES_HOST=elasticsearch
ES_PORT=9200

bin/stop

docker-compose -f docker-compose.yml up -d
[ $? != 0 ] && echo "Failed to start Docker services" && exit

bin/clinotty chmod u+x bin/magento
mv .vscode src

echo "Waiting for connection to Elasticsearch..."
bin/clinotty timeout 100 bash -c "
    until curl --silent --output /dev/null http://$ES_HOST:$ES_PORT/_cat/health?h=st; do
        printf '.'
        sleep 2
    done"
[ $? != 0 ] && echo "Failed to connect to Elasticsearch" && exit

bin/clinotty bin/magento setup:install \
  --base-url="$MAGENTO_BASE_URL" \
  --use-secure="$MAGENTO_USE_SECURE" \
  --db-host=db \
  --db-name="$MYSQL_DATABASE" \
  --db-user="$MYSQL_USER" \
  --db-password="$MYSQL_PASSWORD" \
  --backend-frontname="$MAGENTO_BACKEND_FRONTNAME" \
  --language="$MAGENTO_LANGUAGE" \
  --timezone="$MAGENTO_TIMEZONE" \
  --currency="$MAGENTO_DEFAULT_CURRENCY" \
  --use-secure-admin="$MAGENTO_USE_SECURE_ADMIN" \
  --admin-firstname="$MAGENTO_ADMIN_FIRSTNAME" \
  --admin-lastname="$MAGENTO_ADMIN_LASTNAME" \
  --admin-email="$MAGENTO_ADMIN_EMAIL" \
  --admin-user="$MAGENTO_ADMIN_USERNAME" \
  --admin-password="$MAGENTO_ADMIN_PASSWORD" \
  --amqp-host=rabbitmq \
  --amqp-port=5672 \
  --amqp-user=guest \
  --amqp-password=guest \
  --amqp-virtualhost=/ \
  --cache-backend=redis \
  --cache-backend-redis-server=redis \
  --cache-backend-redis-db=0 \
  --page-cache=redis \
  --page-cache-redis-server=redis \
  --page-cache-redis-db=1 \
  --session-save=redis \
  --session-save-redis-host=redis \
  --session-save-redis-log-level=4 \
  --session-save-redis-db=2 \
  --search-engine=elasticsearch7 \
  --elasticsearch-host=$ES_HOST \
  --elasticsearch-port=$ES_PORT \
  --use-rewrites=1

echo "Copying files from container to host after install..."
bin/copyfromcontainer --all

echo "Turning on developer mode.."
bin/clinotty bin/magento deploy:mode:set developer

if [[ "$INSTALL_SAMPLE_DATA" == true ]]; then
  bin/install-sampledata
fi

bin/clinotty bin/magento indexer:reindex

#echo "Forcing deploy of static content to speed up initial requests..."
#bin/clinotty bin/magento setup:static-content:deploy -f

echo "Re-indexing with Elasticsearch..."
bin/clinotty bin/magento indexer:reindex

echo "Clearing the cache to apply updates..."
bin/clinotty bin/magento cache:flush

echo "Generating SSL certificate..."
bin/setup-ssl "$(basename "$MAGENTO_BASE_URL")"

#echo "Enabling XDebug..."
#bin/xdebug enable

echo "Ensuring Composer auth.json is setup..."
bin/setup-composer-auth

echo "Installing cron (see docker-compose.yml to enable)..."
bin/magento cron:install

echo "Docker development environment setup complete."
echo "You may now access your Magento instance at $MAGENTO_BASE_URL"
