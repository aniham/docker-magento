#!/bin/bash

# shellcheck source=../env/install.env
source env/install.env

echo "Removing existing extentions..."
rm -rf extensions

echo "Installing Data Solutions extensions..."
mkdir extensions

# This array tracks all modules to be enabled during this installation
MODULES_TO_ENABLE=()

# Install services-connector jwt dependency
bin/cli composer require firebase/php-jwt

# Clone common DS repos to extensions directories
git clone git@github.com:magento-commerce/services-connector.git extensions/services-connector
git clone git@github.com:magento-commerce/data-services.git extensions/data-services
git clone git@github.com:magento-commerce/services-id.git extensions/services-id
git clone git@github.com:magento-commerce/saas-export.git extensions/saas-export
git clone git@github.com:magento-commerce/commerce-data-export.git extensions/commerce-data-export
git clone git@github.com:magento-commerce/commerce-data-export-ee.git extensions/commerce-data-export-ee

# Add common DS extensions to enable array
MODULES_TO_ENABLE+=('Magento_ServicesConnector')
MODULES_TO_ENABLE+=('Magento_ServicesId')
MODULES_TO_ENABLE+=('Magento_DataServices')
MODULES_TO_ENABLE+=('Magento_DataServicesMultishipping')
MODULES_TO_ENABLE+=('Magento_SaaSCatalog')
MODULES_TO_ENABLE+=('Magento_SaaSCommon')
MODULES_TO_ENABLE+=('Magento_QueryXml')
MODULES_TO_ENABLE+=('Magento_DataExporter')
MODULES_TO_ENABLE+=('Magento_CatalogDataExporter')
MODULES_TO_ENABLE+=('Magento_CatalogInventoryDataExporter')
MODULES_TO_ENABLE+=('Magento_CatalogUrlRewriteDataExporter')
MODULES_TO_ENABLE+=('Magento_ConfigurableProductDataExporter')
MODULES_TO_ENABLE+=('Magento_BundleProductDataExporter')
MODULES_TO_ENABLE+=('Magento_ParentProductDataExporter')
MODULES_TO_ENABLE+=('Magento_ProductOverrideDataExporter')
if [[ "$INSTALL_PREX" ]]; then
    # Clone prex repos to extensions directories
    git clone git@github.com:magento-commerce/magento-product-recommendations.git extensions/product-recommendations
    git clone git@github.com:magento-commerce/magento-product-recommendations-admin.git extensions/product-recommendations-admin
    git clone git@github.com:magento-commerce/magento-catalog-sync-admin.git extensions/catalog-sync-admin

    # Add prex extensions to enable array
    MODULES_TO_ENABLE+=('Magento_ProductRecommendationsLayout')
    MODULES_TO_ENABLE+=('Magento_PageBuilderProductRecommendations')
    MODULES_TO_ENABLE+=('Magento_VisualProductRecommendations')
    MODULES_TO_ENABLE+=('Magento_ProductRecommendationsAdmin')
    MODULES_TO_ENABLE+=('Magento_ProductRecommendationsSyncAdmin')
    MODULES_TO_ENABLE+=('Magento_CatalogSyncAdmin')
fi
if [[ "$INSTALL_SEARCH" ]]; then
    # Install live-search graphql dependency
    bin/cli composer require gmostafa/php-graphql-client

    # Clone search repo to extensions directories
    git clone git@github.com:magento-commerce/magento-live-search.git extensions/magento-live-search

    # Add search extensions to enable array
    MODULES_TO_ENABLE+=('Magento_LiveSearch')
    MODULES_TO_ENABLE+=('Magento_LiveSearchAdapter')
    MODULES_TO_ENABLE+=('Magento_LiveSearchStorefrontPopover')
    MODULES_TO_ENABLE+=('Magento_LiveSearchMetrics')
    MODULES_TO_ENABLE+=('Magento_LiveSearchTerms')
fi

if [[ "$SAAS_ENVIRONMENT" == "qa" ]]; then
    echo "Setting QA URLs in requirejs-config files..."
    sed -i '' -e 's/commerce.adobedtm.com\/v6/js.magento-datasolutions.com\/qa\/snowplow\/events\/v6/g' extensions/data-services/DataServices/view/frontend/requirejs-config.js
    sed -i '' -e 's/unpkg.com\/@adobe\/magento-storefront-events-sdk@^1\/dist\/index/unpkg.com\/@adobe\/magento-storefront-events-sdk@qa\/dist\/index/g' extensions/data-services/DataServices/view/frontend/requirejs-config.js
    sed -i '' -e 's/unpkg.com\/@adobe\/magento-storefront-event-collector@^1\/dist\/index/unpkg.com\/@adobe\/magento-storefront-event-collector@qa\/dist\/index/g' extensions/data-services/DataServices/view/frontend/requirejs-config.js
    if [[ "$INSTALL_PREX" ]]; then
        sed -i '' -e 's/magento-recs-sdk.adobe.net\/v2\/index/sdk.magento-datasolutions.com\/qa\/v2\/index/g' extensions/product-recommendations/ProductRecommendationsLayout/view/frontend/requirejs-config.js
        sed -i '' -e 's/commerce.adobedtm.com\/recommendations\/events\/v1\/recommendations.min/js.magento-datasolutions.com\/qa\/recommendations\/events\/v1\/recommendations/g' extensions/product-recommendations/ProductRecommendationsLayout/view/frontend/requirejs-config.js
        echo "Setting QA URLs in config.xml files..."
        sed -i '' -e 's/commerce.adobe.net\/recs\/v2/admin-ui-qa.magento-datasolutions.com/g' extensions/product-recommendations-admin/ProductRecommendationsAdmin/etc/config.xml
        sed -i '' -e 's/commerce.adobe.net/admin-ui-qa.magento-datasolutions.com/g' extensions/product-recommendations-admin/ProductRecommendationsAdmin/etc/config.xml
        sed -i '' -e 's/commerce.adobe.net\/catalog\/sync\/v1/catalog-sync-ui-qa.magento-datasolutions.com/g' extensions/catalog-sync-admin/CatalogSyncAdmin/etc/config.xml
        sed -i '' -e 's/commerce.adobe.net/catalog-sync-ui-qa.magento-datasolutions.com/g' extensions/catalog-sync-admin/CatalogSyncAdmin/etc/config.xml
    fi

    echo "Setting QA URLs in csp_whitelist.xml files..."
    sed -i '' -e 's/api.magento.com/qa-api.magedevteam.com/g' extensions/services-id/ServicesId/etc/csp_whitelist.xml
    sed -i '' -e 's/commerce.adobe.io/commerce-int.adobe.io/g' extensions/services-id/ServicesId/etc/csp_whitelist.xml
    sed -i '' -e 's/commerce.adobedtm.com/js.magento-datasolutions.com/g' extensions/data-services/DataServices/etc/csp_whitelist.xml
    sed -i '' -e 's/commerce.adobedc.net/com-magento-qa1.collector.snplow.net/g' extensions/data-services/DataServices/etc/csp_whitelist.xml

    if [[ "$INSTALL_PREX" ]]; then
        sed -i '' -e 's/api.magento.com/qa-api.magedevteam.com/g' extensions/product-recommendations/ProductRecommendationsLayout/etc/csp_whitelist.xml
        sed -i '' -e 's/commerce.adobe.io/commerce-int.adobe.io/g' extensions/product-recommendations/ProductRecommendationsLayout/etc/csp_whitelist.xml
        sed -i '' -e 's/magento-recs-sdk.adobe.net/sdk.magento-datasolutions.com/g' extensions/product-recommendations/ProductRecommendationsLayout/etc/csp_whitelist.xml
        sed -i '' -e 's/api.magento.com/qa-api.magedevteam.com/g' extensions/product-recommendations/PageBuilderProductRecommendations/etc/csp_whitelist.xml
        sed -i '' -e 's/commerce.adobe.io/commerce-int.adobe.io/g' extensions/product-recommendations/PageBuilderProductRecommendations/etc/csp_whitelist.xml
        sed -i '' -e 's/magento-recs-sdk.adobe.net/sdk.magento-datasolutions.com/g' extensions/product-recommendations/PageBuilderProductRecommendations/etc/csp_whitelist.xml
        sed -i '' -e 's/api.magento.com/qa-api.magedevteam.com/g' extensions/product-recommendations-admin/ProductRecommendationsAdmin/etc/csp_whitelist.xml
        sed -i '' -e 's/commerce.adobe.io/commerce-int.adobe.io/g' extensions/product-recommendations-admin/ProductRecommendationsAdmin/etc/csp_whitelist.xml
        sed -i '' -e 's/commerce.adobe.net/admin-ui-qa.magento-datasolutions.com/g' extensions/product-recommendations-admin/ProductRecommendationsAdmin/etc/csp_whitelist.xml
        sed -i '' -e 's/api.magento.com/qa-api.magedevteam.com/g' extensions/product-recommendations-admin/ProductRecommendationsAdmin/etc/csp_whitelist.xml
        sed -i '' -e 's/commerce.adobe.io/commerce-int.adobe.io/g' extensions/product-recommendations-admin/ProductRecommendationsAdmin/etc/csp_whitelist.xml
        sed -i '' -e 's/api.magento.com/qa-api.magedevteam.com/g' extensions/product-recommendations-admin/ProductRecommendationsSyncAdmin/etc/csp_whitelist.xml
        sed -i '' -e 's/commerce.adobe.io/commerce-int.adobe.io/g' extensions/product-recommendations-admin/ProductRecommendationsSyncAdmin/etc/csp_whitelist.xml
        sed -i '' -e 's/api.magento.com/qa-api.magedevteam.com/g' extensions/catalog-sync-admin/CatalogSyncAdmin/etc/csp_whitelist.xml
        sed -i '' -e 's/commerce.adobe.io/commerce-int.adobe.io/g' extensions/catalog-sync-admin/CatalogSyncAdmin/etc/csp_whitelist.xml
        sed -i '' -e 's/commerce.adobe.net/catalog-sync-ui-qa.magento-datasolutions.com/g' extensions/catalog-sync-admin/CatalogSyncAdmin/etc/csp_whitelist.xml
    fi
fi

# Enable extension volumes in docker-compose.dev.yml
sed -i '' -e 's/#- .\/extensions\/services-connector/- .\/extensions\/services-connector/g' docker-compose.dev.yml
sed -i '' -e 's/#- .\/extensions\/services-id/- .\/extensions\/services-id/g' docker-compose.dev.yml
sed -i '' -e 's/#- .\/extensions\/data-services/- .\/extensions\/data-services/g' docker-compose.dev.yml
sed -i '' -e 's/#- .\/extensions\/commerce-data-export/- .\/extensions\/commerce-data-export/g' docker-compose.dev.yml
sed -i '' -e 's/#- .\/extensions\/commerce-data-export-ee/- .\/extensions\/commerce-data-export-ee/g' docker-compose.dev.yml
sed -i '' -e 's/#- .\/extensions\/saas-export/- .\/extensions\/saas-export/g' docker-compose.dev.yml

if [[ "$INSTALL_PREX" ]]; then
    # Enable prex extension volumes in docker-compose.dev.yml
    sed -i '' -e 's/#- .\/extensions\/product-recommendations/- .\/extensions\/product-recommendations/g' docker-compose.dev.yml
    sed -i '' -e 's/#- .\/extensions\/catalog-sync-admin/- .\/extensions\/catalog-sync-admin/g' docker-compose.dev.yml
fi
if [[ "$INSTALL_SEARCH" ]]; then
    # Enable search extension volumes in docker-compose.dev.yml
    sed -i '' -e 's/#- .\/extensions\/magento-live-search/- .\/extensions\/magento-live-search/g' docker-compose.dev.yml
fi

bin/restart

echo "Enabling modules: ${MODULES_TO_ENABLE[*]}"
bin/magento module:enable "${MODULES_TO_ENABLE[*]}"
if [[ "$INSTALL_SEARCH" ]]; then
    # Disable local elasticsearch if live search is installed (would be ideal if we could find a way to not spin up the local ES container in this case as well)
    if [[ "$MAGENTO_EDITION" == 'open-source' ]]; then
        bin/magento module:disable Magento_Elasticsearch Magento_Elasticsearch6 Magento_Elasticsearch7 Magento_AdvancedSearch
    else
        bin/magento module:disable Magento_Elasticsearch Magento_Elasticsearch6 Magento_Elasticsearch7 Magento_ElasticsearchCatalogPermissions Magento_AdvancedSearch Magento_InventoryElasticsearch
    fi
fi

echo "Compiling Magento with changes..."
bin/magento setup:upgrade
bin/magento setup:di:compile
bin/magento cache:flush

bin/copyfromcontainer app/code

echo "Data Solutions extentions successfully installed!"
